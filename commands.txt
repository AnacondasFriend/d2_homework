
        1. Создать двух пользователей (с помощью метода User.objects.create_user).
user1 = User.objects.create_user(username = 'DrugAnacondi', first_name='Linka')
user2 = User.objects.create_user(username = 'Saul Goodman', first_name='Jimmy')
        2. Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(user = user1)
Author.objects.create(user = user2)
        
        3. Добавить 4 категории в модель Category.
Category.objects.create(category_name = "Cats")
Category.objects.create(category_name = "Dogs")
Category.objects.create(category_name = "Nature")
Category.objects.create(category_name = "Law")
        
        4. Добавить 2 статьи и 1 новость.
Post.objects.create(title = 'Cats are friends', text = 'If you are cat you must to know lifes lawes. First law and most popular hghfhfhfg', type_of_content = 'NE', author = Author.objects.get(user = User.objects.get(username = 'DrugAnacondi')) )
Post.objects.create(title = 'Why sky is blue', text = 'На этот вопрос наука пыталсь ответить сотни лет........ gdfhgh ghkghghkghfrde, gfdfhkghdfkghdfg hukfhjhjh  jhfgkfjghfgh', type_of_content = 'AR', author = Author.objects.get(user = User.objects.get(username = 'DrugAnacondi')) )
Post.objects.create(title = 'Law is lawa', text = 'hdgjksd gfrgrrkjgkl gjkrlj /gj gtttgtgt thdfhswklgjdklgj 'so;jfd;ghds;ghskl ds;fjakgjd;gajgkjrgjirsl grk;hjgerhgkhrkhg drgkrhgkrghrkghrkgh', type_of_content = 'AR', author = Author.objects.get(user = User.objects.get(username = 'Saul Goodman')) )
        
        5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(title = 'Why sky is blue').category.add(Category.objects.get(category_name = 'Cats'), Category.objects.get(category_name = 'Nature'))
Post.objects.get(title = 'Cats are friends').category.add(Category.objects.get(category_name = 'Cats'), Category.objects.get(category_name = 'Law'))
Post.objects.get(title = 'Law is lawa').category.add(Category.objects.get(category_name = 'Nature'), Category.objects.get(category_name = 'Law'))
        
        6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
 Comment.objects.create(com_text = 'agree', user = User.objects.get(username = 'Saul Goodman'), post = Post.objects.get(title = 'Cats are friends'))
 Comment.objects.create(com_text = 'interesting theme', user = User.objects.get(username = 'Saul Goodman'), post = Post.objects.get(title = 'Why sky is blue'))
 Comment.objects.create(com_text = 'cool', user = User.objects.get(username = 'DrugAnacondi'), post = Post.objects.get(title = 'Cats are friends'))
 Comment.objects.create(com_text = 'i didnt think about it before', user = User.objects.get(username = 'DrugAnacondi'), post = Post.objects.get(title = 'Law is lawa'))


        7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
        Post.objects.get(title = 'Why sky is blue').like()
        Post.objects.get(title = 'Why sky is blue').like()
        Post.objects.get(title = 'Why sky is blue').like()
        Post.objects.get(title = 'Why sky is blue').dislike()

        Post.objects.get(title = 'Law is lawa').like()
        Post.objects.get(title = 'Law is lawa').dislike()
        Post.objects.get(title = 'Law is lawa').like()
        Post.objects.get(title = 'Law is lawa').like()
        Post.objects.get(title = 'Law is lawa').dislike()

        Post.objects.get(title = 'Law is lawa').like()
        

        Comment.objects.get(com_text = 'agree').like()
        Comment.objects.get(com_text = 'agree').like()
        Comment.objects.get(com_text = 'agree').like()

        8. Обновить рейтинги пользователей.
Author.objects.get(user = User.objects.get(username = 'Saul Goodman')).update_rating()
Author.objects.get(user = User.objects.get(username = 'DrugAnacondi')).update_rating()

        9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
Author.objects.all().order_by('-rating').values('user__username','rating')[0]
        
        10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
 Post.objects.all().order_by('-rating').values('author__user__username','rating', 'datetime', 'title')[0]       
Post.objects.all().order_by('-rating')[0].preview()      
        11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
Comment.objects.filter(post = Post.objects.all().order_by('-rating')[0]).values('com_text','rating','datetime','user__username')